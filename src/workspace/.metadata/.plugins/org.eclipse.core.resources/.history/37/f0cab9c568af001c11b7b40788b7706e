package epi;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature.Setting;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.URIConverter;
import org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.resource.impl.URIConverterImpl;
import org.eclipse.emf.ecore.xmi.impl.EcoreResourceFactoryImpl;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import epi.NamedCompartments.Flow;
import epimodel.Epidemic;
import epimodel.EpimodelFactory;
import epimodel.MetaCompartment;
import epimodel.MetaFlow;
import epimodel.Dimension;

public class EpiImport {
	public static void main(String[] args) throws JSONException, IOException {
		
		Resource.Factory.Registry reg = Resource.Factory.Registry.INSTANCE;
        Map<String, Object> m = reg.getExtensionToFactoryMap();
        m.put(epimodel.EpimodelPackage.eNAME, new EcoreResourceFactoryImpl());
        
        ResourceSet resSet = new ResourceSetImpl();
        resSet.getPackageRegistry().put(epimodel.EpimodelPackage.eNS_URI, epimodel.EpimodelPackage.eINSTANCE);
        
//		URIConverter converter = new ExtensibleURIConverterImpl();
//		converter.getURIMap().put(URI.createURI("platform:/1.epimodel"), URI.createURI("file:/./1.epimodel"));

        Epidemic e1 = EpimodelFactory.eINSTANCE.createEpidemic();
        e1.getDimension().add(EpimodelFactory.eINSTANCE.createDimension());
        e1.getDimension().get(0).setName("test");
        e1.getDimension().get(0).getCompartment().add(EpimodelFactory.eINSTANCE.createMetaCompartment());
        e1.getDimension().get(0).getCompartment().add(EpimodelFactory.eINSTANCE.createMetaCompartment());
        Resource r1 = resSet.createResource(URI.createFileURI("1.epimodel"));
        r1.getContents().add(e1);
        r1.save(null);
        
        Epidemic e2 = EpimodelFactory.eINSTANCE.createEpidemic();
        e2.getDimension().add(e1.getDimension().get(0));
        Resource r2 = resSet.createResource(URI.createFileURI("2.epimodel"));
        r2.getContents().add(e2);
        r2.save(null);

        Resource referencer = load("3.epimodel");
        
        
        Epidemic referencerEpi = (Epidemic) referencer.getContents().get(0);
        Dimension d = referencerEpi.getDimension().get(0);
        {
            String s = d.getName();
            boolean b2 = d.eIsProxy();
            EcoreUtil.resolveAll(d);
            s = d.getName();
            s = d.getName();
        }
        return;
	}
	
	static Resource load(String filename) {
        ResourceSet resSet = new ResourceSetImpl();
        resSet.getPackageRegistry().put(epimodel.EpimodelPackage.eNS_URI, epimodel.EpimodelPackage.eINSTANCE);
        URI uri = URI.createFileURI(filename);
        Resource resource = resSet.getResource(uri, true);
        return resource;
	}
}
