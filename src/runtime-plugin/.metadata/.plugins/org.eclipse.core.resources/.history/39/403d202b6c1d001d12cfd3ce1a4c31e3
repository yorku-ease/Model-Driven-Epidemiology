package my.project.design;

import java.lang.reflect.InvocationTargetException;
import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;

import org.eclipse.emf.ecore.EObject;

/**
 * The services class used by VSM.
 */
public class Services {
    
    @SuppressWarnings("unchecked")
	public Collection<EObject> flowTargets(EObject self) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, NoSuchMethodException, SecurityException {
    	Class<?> objclass = self.getClass();
    	String methodName = "getTargetObjects";
        return (Collection<EObject>) objclass.getMethod(methodName).invoke(self);
    }
    
//    public Collection<EObject> myService2(EObject self) {
//    	return self.eContents().stream().map(EObject::eContents).flatMap(List::stream).collect(Collectors.toList());
//    }
    
    @SuppressWarnings("unchecked")
	public Collection<EObject> flowLabels(EObject self, EObject target) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException, NoSuchMethodException, SecurityException {
    	Class<?> objclass = self.getClass();
    	String methodName = "getTargetLabel";
        return (Collection<EObject>) objclass.getMethod(methodName).invoke(self);
    }
}
