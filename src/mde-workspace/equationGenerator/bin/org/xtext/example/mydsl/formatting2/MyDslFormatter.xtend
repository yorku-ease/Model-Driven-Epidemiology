/*
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl.formatting2

import PhysicalEpidemicRoot.PhysicalCompartment
import PhysicalEpidemicRoot.PhysicalEpidemic
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.services.MyDslGrammarAccess

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(PhysicalEpidemic physicalEpidemic, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (physicalCompartment : physicalEpidemic.compartments) {
			physicalCompartment.format
		}
		for (physicalFlow : physicalEpidemic.flows) {
			physicalFlow.format
		}
	}

	def dispatch void format(PhysicalCompartment physicalCompartment, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (label : physicalCompartment.labels) {
			label.format
		}
	}
	
	// TODO: implement for PhysicalFlow
}
