/*
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PhysicalEpidemicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PhysicalEpidemic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPhysicalEpidemicAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPhysicalEpidemicKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCompartmentsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cCompartmentsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cCompartmentsPhysicalCompartmentParserRuleCall_3_2_0 = (RuleCall)cCompartmentsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cCompartmentsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cCompartmentsPhysicalCompartmentParserRuleCall_3_3_1_0 = (RuleCall)cCompartmentsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFlowsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cFlowsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cFlowsPhysicalFlowParserRuleCall_4_2_0 = (RuleCall)cFlowsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cFlowsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cFlowsPhysicalFlowParserRuleCall_4_3_1_0 = (RuleCall)cFlowsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PhysicalEpidemic returns PhysicalEpidemic:
		//    {PhysicalEpidemic}
		//    'PhysicalEpidemic'
		//    '{'
		//        ('compartments' '{' compartments+=PhysicalCompartment ( "," compartments+=PhysicalCompartment)* '}' )?
		//        ('flows' '{' flows+=PhysicalFlow ( "," flows+=PhysicalFlow)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{PhysicalEpidemic}
		//'PhysicalEpidemic'
		//'{'
		//    ('compartments' '{' compartments+=PhysicalCompartment ( "," compartments+=PhysicalCompartment)* '}' )?
		//    ('flows' '{' flows+=PhysicalFlow ( "," flows+=PhysicalFlow)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{PhysicalEpidemic}
		public Action getPhysicalEpidemicAction_0() { return cPhysicalEpidemicAction_0; }
		
		//'PhysicalEpidemic'
		public Keyword getPhysicalEpidemicKeyword_1() { return cPhysicalEpidemicKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('compartments' '{' compartments+=PhysicalCompartment ( "," compartments+=PhysicalCompartment)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'compartments'
		public Keyword getCompartmentsKeyword_3_0() { return cCompartmentsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//compartments+=PhysicalCompartment
		public Assignment getCompartmentsAssignment_3_2() { return cCompartmentsAssignment_3_2; }
		
		//PhysicalCompartment
		public RuleCall getCompartmentsPhysicalCompartmentParserRuleCall_3_2_0() { return cCompartmentsPhysicalCompartmentParserRuleCall_3_2_0; }
		
		//( "," compartments+=PhysicalCompartment)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//compartments+=PhysicalCompartment
		public Assignment getCompartmentsAssignment_3_3_1() { return cCompartmentsAssignment_3_3_1; }
		
		//PhysicalCompartment
		public RuleCall getCompartmentsPhysicalCompartmentParserRuleCall_3_3_1_0() { return cCompartmentsPhysicalCompartmentParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('flows' '{' flows+=PhysicalFlow ( "," flows+=PhysicalFlow)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'flows'
		public Keyword getFlowsKeyword_4_0() { return cFlowsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//flows+=PhysicalFlow
		public Assignment getFlowsAssignment_4_2() { return cFlowsAssignment_4_2; }
		
		//PhysicalFlow
		public RuleCall getFlowsPhysicalFlowParserRuleCall_4_2_0() { return cFlowsPhysicalFlowParserRuleCall_4_2_0; }
		
		//( "," flows+=PhysicalFlow)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//flows+=PhysicalFlow
		public Assignment getFlowsAssignment_4_3_1() { return cFlowsAssignment_4_3_1; }
		
		//PhysicalFlow
		public RuleCall getFlowsPhysicalFlowParserRuleCall_4_3_1_0() { return cFlowsPhysicalFlowParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PhysicalCompartmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PhysicalCompartment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPhysicalCompartmentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPhysicalCompartmentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLabelsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cLabelsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cLabelsLabelParserRuleCall_3_2_0 = (RuleCall)cLabelsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cLabelsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cLabelsLabelParserRuleCall_3_3_1_0 = (RuleCall)cLabelsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PhysicalCompartment returns PhysicalCompartment:
		//    {PhysicalCompartment}
		//    'PhysicalCompartment'
		//    '{'
		//        ('labels' '{' labels+=Label ( "," labels+=Label)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{PhysicalCompartment}
		//'PhysicalCompartment'
		//'{'
		//    ('labels' '{' labels+=Label ( "," labels+=Label)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{PhysicalCompartment}
		public Action getPhysicalCompartmentAction_0() { return cPhysicalCompartmentAction_0; }
		
		//'PhysicalCompartment'
		public Keyword getPhysicalCompartmentKeyword_1() { return cPhysicalCompartmentKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('labels' '{' labels+=Label ( "," labels+=Label)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'labels'
		public Keyword getLabelsKeyword_3_0() { return cLabelsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//labels+=Label
		public Assignment getLabelsAssignment_3_2() { return cLabelsAssignment_3_2; }
		
		//Label
		public RuleCall getLabelsLabelParserRuleCall_3_2_0() { return cLabelsLabelParserRuleCall_3_2_0; }
		
		//( "," labels+=Label)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//labels+=Label
		public Assignment getLabelsAssignment_3_3_1() { return cLabelsAssignment_3_3_1; }
		
		//Label
		public RuleCall getLabelsLabelParserRuleCall_3_3_1_0() { return cLabelsLabelParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PhysicalFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PhysicalFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPhysicalFlowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIdAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIdEStringParserRuleCall_2_1_0 = (RuleCall)cIdAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFromKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFromAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cFromPhysicalCompartmentCrossReference_3_1_0 = (CrossReference)cFromAssignment_3_1.eContents().get(0);
		private final RuleCall cFromPhysicalCompartmentEStringParserRuleCall_3_1_0_1 = (RuleCall)cFromPhysicalCompartmentCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cToPhysicalCompartmentCrossReference_4_1_0 = (CrossReference)cToAssignment_4_1.eContents().get(0);
		private final RuleCall cToPhysicalCompartmentEStringParserRuleCall_4_1_0_1 = (RuleCall)cToPhysicalCompartmentCrossReference_4_1_0.eContents().get(1);
		private final Keyword cEquationtemplateKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cEquationtemplateAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEquationtemplateEquationTemplateParserRuleCall_6_0 = (RuleCall)cEquationtemplateAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//PhysicalFlow returns PhysicalFlow:
		//    'PhysicalFlow'
		//    '{'
		//        ('id' id=EString)?
		//        ('from' from=[PhysicalCompartment|EString])?
		//        ('to' to=[PhysicalCompartment|EString])?
		//        'equationtemplate' equationtemplate=EquationTemplate
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'PhysicalFlow'
		//'{'
		//    ('id' id=EString)?
		//    ('from' from=[PhysicalCompartment|EString])?
		//    ('to' to=[PhysicalCompartment|EString])?
		//    'equationtemplate' equationtemplate=EquationTemplate
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'PhysicalFlow'
		public Keyword getPhysicalFlowKeyword_0() { return cPhysicalFlowKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('id' id=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'id'
		public Keyword getIdKeyword_2_0() { return cIdKeyword_2_0; }
		
		//id=EString
		public Assignment getIdAssignment_2_1() { return cIdAssignment_2_1; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_2_1_0() { return cIdEStringParserRuleCall_2_1_0; }
		
		//('from' from=[PhysicalCompartment|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'from'
		public Keyword getFromKeyword_3_0() { return cFromKeyword_3_0; }
		
		//from=[PhysicalCompartment|EString]
		public Assignment getFromAssignment_3_1() { return cFromAssignment_3_1; }
		
		//[PhysicalCompartment|EString]
		public CrossReference getFromPhysicalCompartmentCrossReference_3_1_0() { return cFromPhysicalCompartmentCrossReference_3_1_0; }
		
		//EString
		public RuleCall getFromPhysicalCompartmentEStringParserRuleCall_3_1_0_1() { return cFromPhysicalCompartmentEStringParserRuleCall_3_1_0_1; }
		
		//('to' to=[PhysicalCompartment|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'to'
		public Keyword getToKeyword_4_0() { return cToKeyword_4_0; }
		
		//to=[PhysicalCompartment|EString]
		public Assignment getToAssignment_4_1() { return cToAssignment_4_1; }
		
		//[PhysicalCompartment|EString]
		public CrossReference getToPhysicalCompartmentCrossReference_4_1_0() { return cToPhysicalCompartmentCrossReference_4_1_0; }
		
		//EString
		public RuleCall getToPhysicalCompartmentEStringParserRuleCall_4_1_0_1() { return cToPhysicalCompartmentEStringParserRuleCall_4_1_0_1; }
		
		//'equationtemplate'
		public Keyword getEquationtemplateKeyword_5() { return cEquationtemplateKeyword_5; }
		
		//equationtemplate=EquationTemplate
		public Assignment getEquationtemplateAssignment_6() { return cEquationtemplateAssignment_6; }
		
		//EquationTemplate
		public RuleCall getEquationtemplateEquationTemplateParserRuleCall_6_0() { return cEquationtemplateEquationTemplateParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class LabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Label");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLabelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLabelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Label returns Label:
		//    {Label}
		//    'Label'
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Label}
		//'Label'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{Label}
		public Action getLabelAction_0() { return cLabelAction_0; }
		
		//'Label'
		public Keyword getLabelKeyword_1() { return cLabelKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EquationTemplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EquationTemplate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEquationTemplateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEquationTemplateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSourceParametersKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceParametersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceParametersEStringParserRuleCall_3_1_0 = (RuleCall)cSourceParametersAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cContactParametersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cContactParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cContactParametersEStringParserRuleCall_4_1_0 = (RuleCall)cContactParametersAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cContactCompartmentKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cContactCompartmentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cContactCompartmentEStringParserRuleCall_5_1_0 = (RuleCall)cContactCompartmentAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EquationTemplate returns EquationTemplate:
		//    {EquationTemplate}
		//    'EquationTemplate'
		//    '{'
		//        ('sourceParameters' sourceParameters=EString)?
		//        ('contactParameters' contactParameters=EString)?
		//        ('contactCompartment' contactCompartment=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{EquationTemplate}
		//'EquationTemplate'
		//'{'
		//    ('sourceParameters' sourceParameters=EString)?
		//    ('contactParameters' contactParameters=EString)?
		//    ('contactCompartment' contactCompartment=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{EquationTemplate}
		public Action getEquationTemplateAction_0() { return cEquationTemplateAction_0; }
		
		//'EquationTemplate'
		public Keyword getEquationTemplateKeyword_1() { return cEquationTemplateKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('sourceParameters' sourceParameters=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'sourceParameters'
		public Keyword getSourceParametersKeyword_3_0() { return cSourceParametersKeyword_3_0; }
		
		//sourceParameters=EString
		public Assignment getSourceParametersAssignment_3_1() { return cSourceParametersAssignment_3_1; }
		
		//EString
		public RuleCall getSourceParametersEStringParserRuleCall_3_1_0() { return cSourceParametersEStringParserRuleCall_3_1_0; }
		
		//('contactParameters' contactParameters=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'contactParameters'
		public Keyword getContactParametersKeyword_4_0() { return cContactParametersKeyword_4_0; }
		
		//contactParameters=EString
		public Assignment getContactParametersAssignment_4_1() { return cContactParametersAssignment_4_1; }
		
		//EString
		public RuleCall getContactParametersEStringParserRuleCall_4_1_0() { return cContactParametersEStringParserRuleCall_4_1_0; }
		
		//('contactCompartment' contactCompartment=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'contactCompartment'
		public Keyword getContactCompartmentKeyword_5_0() { return cContactCompartmentKeyword_5_0; }
		
		//contactCompartment=EString
		public Assignment getContactCompartmentAssignment_5_1() { return cContactCompartmentAssignment_5_1; }
		
		//EString
		public RuleCall getContactCompartmentEStringParserRuleCall_5_1_0() { return cContactCompartmentEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private final PhysicalEpidemicElements pPhysicalEpidemic;
	private final PhysicalCompartmentElements pPhysicalCompartment;
	private final PhysicalFlowElements pPhysicalFlow;
	private final LabelElements pLabel;
	private final EStringElements pEString;
	private final EquationTemplateElements pEquationTemplate;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPhysicalEpidemic = new PhysicalEpidemicElements();
		this.pPhysicalCompartment = new PhysicalCompartmentElements();
		this.pPhysicalFlow = new PhysicalFlowElements();
		this.pLabel = new LabelElements();
		this.pEString = new EStringElements();
		this.pEquationTemplate = new EquationTemplateElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//PhysicalEpidemic returns PhysicalEpidemic:
	//    {PhysicalEpidemic}
	//    'PhysicalEpidemic'
	//    '{'
	//        ('compartments' '{' compartments+=PhysicalCompartment ( "," compartments+=PhysicalCompartment)* '}' )?
	//        ('flows' '{' flows+=PhysicalFlow ( "," flows+=PhysicalFlow)* '}' )?
	//    '}';
	public PhysicalEpidemicElements getPhysicalEpidemicAccess() {
		return pPhysicalEpidemic;
	}
	
	public ParserRule getPhysicalEpidemicRule() {
		return getPhysicalEpidemicAccess().getRule();
	}
	
	//PhysicalCompartment returns PhysicalCompartment:
	//    {PhysicalCompartment}
	//    'PhysicalCompartment'
	//    '{'
	//        ('labels' '{' labels+=Label ( "," labels+=Label)* '}' )?
	//    '}';
	public PhysicalCompartmentElements getPhysicalCompartmentAccess() {
		return pPhysicalCompartment;
	}
	
	public ParserRule getPhysicalCompartmentRule() {
		return getPhysicalCompartmentAccess().getRule();
	}
	
	//PhysicalFlow returns PhysicalFlow:
	//    'PhysicalFlow'
	//    '{'
	//        ('id' id=EString)?
	//        ('from' from=[PhysicalCompartment|EString])?
	//        ('to' to=[PhysicalCompartment|EString])?
	//        'equationtemplate' equationtemplate=EquationTemplate
	//    '}';
	public PhysicalFlowElements getPhysicalFlowAccess() {
		return pPhysicalFlow;
	}
	
	public ParserRule getPhysicalFlowRule() {
		return getPhysicalFlowAccess().getRule();
	}
	
	//Label returns Label:
	//    {Label}
	//    'Label'
	//    name=EString;
	public LabelElements getLabelAccess() {
		return pLabel;
	}
	
	public ParserRule getLabelRule() {
		return getLabelAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EquationTemplate returns EquationTemplate:
	//    {EquationTemplate}
	//    'EquationTemplate'
	//    '{'
	//        ('sourceParameters' sourceParameters=EString)?
	//        ('contactParameters' contactParameters=EString)?
	//        ('contactCompartment' contactCompartment=EString)?
	//    '}';
	public EquationTemplateElements getEquationTemplateAccess() {
		return pEquationTemplate;
	}
	
	public ParserRule getEquationTemplateRule() {
		return getEquationTemplateAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
