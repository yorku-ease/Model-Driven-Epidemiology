/*
 * generated by Xtext 2.32.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "PhysicalEpidemic";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePhysicalEpidemic
entryRulePhysicalEpidemic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicalEpidemicRule()); }
	iv_rulePhysicalEpidemic=rulePhysicalEpidemic
	{ $current=$iv_rulePhysicalEpidemic.current; }
	EOF;

// Rule PhysicalEpidemic
rulePhysicalEpidemic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPhysicalEpidemicAccess().getPhysicalEpidemicAction_0(),
					$current);
			}
		)
		otherlv_1='PhysicalEpidemic'
		{
			newLeafNode(otherlv_1, grammarAccess.getPhysicalEpidemicAccess().getPhysicalEpidemicKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPhysicalEpidemicAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='compartments'
			{
				newLeafNode(otherlv_3, grammarAccess.getPhysicalEpidemicAccess().getCompartmentsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getPhysicalEpidemicAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicalEpidemicAccess().getCompartmentsPhysicalCompartmentParserRuleCall_3_2_0());
					}
					lv_compartments_5_0=rulePhysicalCompartment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicalEpidemicRule());
						}
						add(
							$current,
							"compartments",
							lv_compartments_5_0,
							"org.xtext.example.mydsl.MyDsl.PhysicalCompartment");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getPhysicalEpidemicAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPhysicalEpidemicAccess().getCompartmentsPhysicalCompartmentParserRuleCall_3_3_1_0());
						}
						lv_compartments_7_0=rulePhysicalCompartment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPhysicalEpidemicRule());
							}
							add(
								$current,
								"compartments",
								lv_compartments_7_0,
								"org.xtext.example.mydsl.MyDsl.PhysicalCompartment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getPhysicalEpidemicAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='flows'
			{
				newLeafNode(otherlv_9, grammarAccess.getPhysicalEpidemicAccess().getFlowsKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getPhysicalEpidemicAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicalEpidemicAccess().getFlowsPhysicalFlowParserRuleCall_4_2_0());
					}
					lv_flows_11_0=rulePhysicalFlow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicalEpidemicRule());
						}
						add(
							$current,
							"flows",
							lv_flows_11_0,
							"org.xtext.example.mydsl.MyDsl.PhysicalFlow");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getPhysicalEpidemicAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPhysicalEpidemicAccess().getFlowsPhysicalFlowParserRuleCall_4_3_1_0());
						}
						lv_flows_13_0=rulePhysicalFlow
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPhysicalEpidemicRule());
							}
							add(
								$current,
								"flows",
								lv_flows_13_0,
								"org.xtext.example.mydsl.MyDsl.PhysicalFlow");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getPhysicalEpidemicAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getPhysicalEpidemicAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePhysicalCompartment
entryRulePhysicalCompartment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicalCompartmentRule()); }
	iv_rulePhysicalCompartment=rulePhysicalCompartment
	{ $current=$iv_rulePhysicalCompartment.current; }
	EOF;

// Rule PhysicalCompartment
rulePhysicalCompartment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPhysicalCompartmentAccess().getPhysicalCompartmentAction_0(),
					$current);
			}
		)
		otherlv_1='PhysicalCompartment'
		{
			newLeafNode(otherlv_1, grammarAccess.getPhysicalCompartmentAccess().getPhysicalCompartmentKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPhysicalCompartmentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='labels'
			{
				newLeafNode(otherlv_3, grammarAccess.getPhysicalCompartmentAccess().getLabelsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getPhysicalCompartmentAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicalCompartmentAccess().getLabelsLabelParserRuleCall_3_2_0());
					}
					lv_labels_5_0=ruleLabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicalCompartmentRule());
						}
						add(
							$current,
							"labels",
							lv_labels_5_0,
							"org.xtext.example.mydsl.MyDsl.Label");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getPhysicalCompartmentAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPhysicalCompartmentAccess().getLabelsLabelParserRuleCall_3_3_1_0());
						}
						lv_labels_7_0=ruleLabel
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPhysicalCompartmentRule());
							}
							add(
								$current,
								"labels",
								lv_labels_7_0,
								"org.xtext.example.mydsl.MyDsl.Label");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getPhysicalCompartmentAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getPhysicalCompartmentAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePhysicalFlow
entryRulePhysicalFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicalFlowRule()); }
	iv_rulePhysicalFlow=rulePhysicalFlow
	{ $current=$iv_rulePhysicalFlow.current; }
	EOF;

// Rule PhysicalFlow
rulePhysicalFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PhysicalFlow'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhysicalFlowAccess().getPhysicalFlowKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPhysicalFlowAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getPhysicalFlowAccess().getIdKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicalFlowAccess().getIdEStringParserRuleCall_2_1_0());
					}
					lv_id_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicalFlowRule());
						}
						set(
							$current,
							"id",
							lv_id_3_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='from'
			{
				newLeafNode(otherlv_4, grammarAccess.getPhysicalFlowAccess().getFromKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhysicalFlowRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPhysicalFlowAccess().getFromPhysicalCompartmentCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='to'
			{
				newLeafNode(otherlv_6, grammarAccess.getPhysicalFlowAccess().getToKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhysicalFlowRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPhysicalFlowAccess().getToPhysicalCompartmentCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='equationtemplate'
		{
			newLeafNode(otherlv_8, grammarAccess.getPhysicalFlowAccess().getEquationtemplateKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicalFlowAccess().getEquationtemplateEquationTemplateParserRuleCall_6_0());
				}
				lv_equationtemplate_9_0=ruleEquationTemplate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicalFlowRule());
					}
					set(
						$current,
						"equationtemplate",
						lv_equationtemplate_9_0,
						"org.xtext.example.mydsl.MyDsl.EquationTemplate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getPhysicalFlowAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLabelAccess().getLabelAction_0(),
					$current);
			}
		)
		otherlv_1='Label'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getLabelKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLabelAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabelRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEquationTemplate
entryRuleEquationTemplate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationTemplateRule()); }
	iv_ruleEquationTemplate=ruleEquationTemplate
	{ $current=$iv_ruleEquationTemplate.current; }
	EOF;

// Rule EquationTemplate
ruleEquationTemplate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEquationTemplateAccess().getEquationTemplateAction_0(),
					$current);
			}
		)
		otherlv_1='EquationTemplate'
		{
			newLeafNode(otherlv_1, grammarAccess.getEquationTemplateAccess().getEquationTemplateKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEquationTemplateAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='sourceParameters'
			{
				newLeafNode(otherlv_3, grammarAccess.getEquationTemplateAccess().getSourceParametersKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationTemplateAccess().getSourceParametersEStringParserRuleCall_3_1_0());
					}
					lv_sourceParameters_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationTemplateRule());
						}
						set(
							$current,
							"sourceParameters",
							lv_sourceParameters_4_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='contactParameters'
			{
				newLeafNode(otherlv_5, grammarAccess.getEquationTemplateAccess().getContactParametersKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationTemplateAccess().getContactParametersEStringParserRuleCall_4_1_0());
					}
					lv_contactParameters_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationTemplateRule());
						}
						set(
							$current,
							"contactParameters",
							lv_contactParameters_6_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='contactCompartment'
			{
				newLeafNode(otherlv_7, grammarAccess.getEquationTemplateAccess().getContactCompartmentKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationTemplateAccess().getContactCompartmentEStringParserRuleCall_5_1_0());
					}
					lv_contactCompartment_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationTemplateRule());
						}
						set(
							$current,
							"contactCompartment",
							lv_contactCompartment_8_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getEquationTemplateAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
